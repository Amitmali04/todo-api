openapi: 3.0.0
info:
  title: Develop a RESTful API for a Todo List Application
  description: Create a RESTful API backend for a simple to-do list application that allows users to manage their tasks. The API should handle CRUD (Create, Read, Update, Delete) operations for tasks and provide endpoints for user authentication and authorization.
  version: 1.0.0
servers:
  - url: http://localhost:8002
    description: Local development server
components:
  securitySchemes:
    BasicAuth:
      type: http
      scheme: basic
  schemas:
    userSchema:
      type: object
      properties:
        email:
          type: string
        password:
          type: string
      required:
        - email
        - password
    Task:
      type: object
      properties:
        id:
          type: integer
        title:
          type: string
        description:
          type: string
        due_date:
          type: string
        status:
          type: string
  responses:
    Unauthorized:
      description: Unauthorized

paths:
  /api/v1/auth/login-account:
    post:
      summary: Login to the application
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/userSchema'
      responses:
        '200':
          description: Successfully logged in
        '401':
          $ref: '#/components/responses/Unauthorized'

  /api/v1/task/read-task:
    get:
      summary: Retrieve all tasks
      security:
        - BasicAuth: []
      responses:
        '200':
          description: A list of tasks
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Task'

  /api/v1/task/create-task:
    post:
      summary: Create a new task
      security:
        - BasicAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewTask'
      responses:
        '201':
          description: Task created successfully
        '400':
          description: Invalid input

  /api/v1/task/single-task/{taskId}:
    parameters:
      - name: taskId
        in: path
        required: true
        description: ID of the task to manipulate
        schema:
          type: integer
    get:
      summary: Retrieve a task by ID
      security:
        - BasicAuth: []
      responses:
        '200':
          description: Task retrieved successfully
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Task'
        '404':
          description: Task not found

  /api/v1/task/update-task/{taskId}:
    put:
      summary: Update a task by ID
      security:
        - BasicAuth: []
      parameters:
        - name: taskId
          in: path
          required: true
          description: ID of the task to update
          schema:
            type: integer
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Task'
      responses:
        '200':
          description: Task updated successfully
        '400':
          description: Invalid input
        '404':
          description: Task not found

  /api/v1/task/delete-task/{taskId}:
    delete:
      summary: Delete a task by ID
      security:
        - BasicAuth: []
      parameters:
        - name: taskId
          in: path
          required: true
          description: ID of the task to delete
          schema:
            type: integer
      responses:
        '204':
          description: Task deleted successfully
        '404':
          description: Task not found
